{
  "createdAt": "2025-09-08T06:05:44.328Z",
  "updatedAt": "2025-09-10T06:18:18.000Z",
  "id": "MtmQ9Xnkq9TVgRVL",
  "name": "AB Memory agent",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        64,
        -48
      ],
      "id": "83f614ec-ab95-48dd-ae31-8d9cb909d1ec",
      "name": "When chat message received",
      "webhookId": "37e9dd95-5c0b-498c-947d-cabcccac5f0d"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=# ROLE\nYou are a friendly AI assistant.\nYou are currently talking to Leon.\n\n# RULES\nWhen a user sends a new message, decide if the user provided any noteworthy information that should be stored in memory. If so, call the Save Memory tool to store this information in memory. DO NOT inform the user that this information was stored in memory. Simply continue to answer the question or executing the next tasks.\n\n# Tools\n## Save Memory\nUse this tool to store information about the user. Extract and summarize interesting information from the user message and pass it to this tool.\n\n# Memories | I\nHere are the last noteworthy memories that you've collected from the user, including the date and time this information was collected.\n!! IMPORTANT!\nThink carefully about your responses and take the user's preferences into account!\nAlso consider the date and time that a memory was shared in order to respond with the most up to date information.\n\n{{ $json.memory.toJsonString() }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        944,
        -32
      ],
      "id": "57199b00-42fb-45de-8d2e-4cedc119e249",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        784,
        192
      ],
      "id": "524e0bbd-0cf5-4cee-9fea-3a003fc0a04a",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "8ZVcTVhxA5p7wXCn",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appb4PO0IXyES9cvt",
          "mode": "list",
          "cachedResultName": "test",
          "cachedResultUrl": "https://airtable.com/appb4PO0IXyES9cvt"
        },
        "table": {
          "__rl": true,
          "value": "tblT2jXnKzYYBvNHD",
          "mode": "list",
          "cachedResultName": "Table 1",
          "cachedResultUrl": "https://airtable.com/appb4PO0IXyES9cvt/tblT2jXnKzYYBvNHD"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "User": "Abdulrehman",
            "Memory": "={{ $fromAI('memory')}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Memory",
              "displayName": "Memory",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "User",
              "displayName": "User",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Created",
              "displayName": "Created",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.airtableTool",
      "typeVersion": 2.1,
      "position": [
        1120,
        176
      ],
      "id": "fe2d1348-ad64-4c16-b2af-664b27599bd1",
      "name": "Create a record in Airtable",
      "credentials": {
        "airtableTokenApi": {
          "id": "wTrV4vL93jFtRVWN",
          "name": "Airtable Personal Access Token account 2"
        }
      }
    },
    {
      "parameters": {
        "operation": "search",
        "base": {
          "__rl": true,
          "value": "appb4PO0IXyES9cvt",
          "mode": "list",
          "cachedResultName": "test",
          "cachedResultUrl": "https://airtable.com/appb4PO0IXyES9cvt"
        },
        "table": {
          "__rl": true,
          "value": "tblT2jXnKzYYBvNHD",
          "mode": "list",
          "cachedResultName": "Table 1",
          "cachedResultUrl": "https://airtable.com/appb4PO0IXyES9cvt/tblT2jXnKzYYBvNHD"
        },
        "filterByFormula": "({User}='Abdulrehman')",
        "options": {},
        "sort": {
          "property": [
            {
              "field": "Created"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        256,
        112
      ],
      "id": "b6eb2fa2-6bef-4d0f-8c78-dcae5f4e8623",
      "name": "Search records",
      "alwaysOutputData": false,
      "credentials": {
        "airtableTokenApi": {
          "id": "wTrV4vL93jFtRVWN",
          "name": "Airtable Personal Access Token account 2"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        928,
        192
      ],
      "id": "41647484-cb8b-43b5-a472-96d1bf21f5d2",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineAll",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        640,
        -32
      ],
      "id": "80b4afd0-acbe-467d-a8cd-37ed11a560ff",
      "name": "Merge"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "memory",
        "include": "specifiedFields",
        "fieldsToInclude": "Memory, createdTime",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        464,
        112
      ],
      "id": "9c220c42-5cb6-4fd4-8cf0-23a10f5917a3",
      "name": "Aggregate1"
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Search records",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Create a record in Airtable": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search records": {
      "main": [
        [
          {
            "node": "Aggregate1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "05be9308-e726-4d15-b0fe-15df7fab8e28",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-09-08T06:05:44.330Z",
      "updatedAt": "2025-09-08T06:05:44.330Z",
      "role": "workflow:owner",
      "workflowId": "MtmQ9Xnkq9TVgRVL",
      "projectId": "DUObCiOoOXJuG68P"
    }
  ],
  "tags": []
}