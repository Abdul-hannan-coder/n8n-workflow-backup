{
  "createdAt": "2025-10-03T12:46:19.207Z",
  "updatedAt": "2025-10-03T12:46:19.207Z",
  "id": "rHEeydgrhmXnZzZF",
  "name": "My workflow 5",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "1fcb6a5b-7d53-4656-a5ac-7cf154b2e01c",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node (JavaScript)\nconst fetch = require('node-fetch');\n\nasync function wait(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nasync function getPatients() {\n  const allPatients = [];\n  let page = 1;\n  const perPage = 50;\n  const maxPages = 50; // limit to 50 pages\n\n  while (page <= maxPages) {\n    const url = `https://api.au1.cliniko.com/v1/patients?page=${page}&per_page=${perPage}`;\n    \n    // Add your Authorization header (API key or bearer token)\n    const response = await fetch(url, {\n      headers: {\n        \"Authorization\": \"Bearer YOUR_API_KEY\",\n        \"Accept\": \"application/json\"\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`Failed on page ${page}: ${response.statusText}`);\n    }\n\n    const data = await response.json();\n\n    if (data && data.patients) {\n      allPatients.push(...data.patients);\n    }\n\n    // If no next page available, break\n    if (!data.links || !data.links.next) {\n      break;\n    }\n\n    page++;\n    // Wait 10 sec between requests\n    await wait(10000);\n  }\n\n  return allPatients;\n}\n\nconst patients = await getPatients();\n\n// Return as n8n output\nreturn patients.map(p => ({ json: p }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        208,
        0
      ],
      "id": "fd9c9f4f-193e-4418-a7f7-9a2da062385c",
      "name": "Code"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": null,
  "pinData": {},
  "versionId": "ef1e2bd8-bb86-44a2-90b6-fd6db682c47a",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-03T12:46:19.209Z",
      "updatedAt": "2025-10-03T12:46:19.209Z",
      "role": "workflow:owner",
      "workflowId": "rHEeydgrhmXnZzZF",
      "projectId": "DUObCiOoOXJuG68P"
    }
  ],
  "tags": []
}